# Generated by Django 5.2.7 on 2025-10-20 09:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LiteratureReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "generated_text",
                    models.TextField(
                        help_text="The full AI-generated literature review (≥3000 words)."
                    ),
                ),
                ("word_count", models.IntegerField(default=0)),
                ("model_name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "bibliography",
                    models.TextField(
                        blank=True,
                        help_text="APA or IEEE formatted references.",
                        null=True,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Paper",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "openalex_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("title", models.CharField(max_length=500)),
                (
                    "authors",
                    models.TextField(help_text="Comma-separated list of authors."),
                ),
                ("year", models.IntegerField(blank=True, null=True)),
                ("doi", models.CharField(blank=True, max_length=100, null=True)),
                ("url", models.URLField(blank=True, null=True)),
                ("open_access_pdf", models.URLField(blank=True, null=True)),
                (
                    "pdf_file",
                    models.FileField(blank=True, null=True, upload_to="papers/pdfs/"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("downloaded", "Downloaded"),
                            ("extracted", "Extracted"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        help_text="Current processing status.",
                        max_length=20,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        blank=True,
                        help_text="Extracted full text from the paper PDF.",
                        null=True,
                    ),
                ),
                ("word_count", models.IntegerField(blank=True, null=True)),
                ("extraction_error", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-year", "title"],
            },
        ),
        migrations.CreateModel(
            name="Citation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("inline_citation", models.CharField(max_length=255)),
                ("formatted_reference", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "review",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="citations",
                        to="literature.literaturereview",
                    ),
                ),
                (
                    "paper",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="citations",
                        to="literature.paper",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SearchQuery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        help_text="The topic to search for in OpenAlex.", max_length=255
                    ),
                ),
                (
                    "user_prompt",
                    models.TextField(
                        help_text="User’s instruction for AI model focus."
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user who submitted this search query.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="search_queries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.AddField(
            model_name="paper",
            name="search_query",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="papers",
                to="literature.searchquery",
            ),
        ),
        migrations.AddField(
            model_name="literaturereview",
            name="search_query",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="review",
                to="literature.searchquery",
            ),
        ),
        migrations.CreateModel(
            name="TaskStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("search", "Search Papers"),
                            ("download", "Download PDFs"),
                            ("extract", "Extract Texts"),
                            ("generate", "Generate Review"),
                        ],
                        max_length=20,
                    ),
                ),
                ("status", models.CharField(default="pending", max_length=20)),
                ("progress", models.FloatField(default=0.0)),
                ("message", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "search_query",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="literature.searchquery",
                    ),
                ),
            ],
            options={
                "ordering": ["timestamp"],
            },
        ),
    ]
